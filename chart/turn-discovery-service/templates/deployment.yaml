apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "turn-discovery-service.fullname" . }}
  labels:
    {{- include "turn-discovery-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "turn-discovery-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "turn-discovery-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "turn-discovery-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: my-config
              mountPath: /config
            - name: secrets-store-inline
              mountPath: /mnt/secrets-store
            - name: my-secret
              mountPath: /tmp/secret
          ports:
            - name: http
              containerPort: {{ .Values.http.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livenessProbe
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /readinessProbe
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CONFIG_PATH
              value: /config/config.yaml
            - name: SECRET_PATH
              value: /mnt/secrets-store/viz3d-secrets
            - name: PORT
              value: "{{ .Values.http.port }}"
            - name: ELB_NAME
              value: {{ .Values.elb.name }}
            # save Kubernetes metadata as environment variables for use in metrics
            - name: NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
      volumes:
      - name: my-config
        configMap:
          name: {{ .Values.app }}-configmap
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.secretProviderClass }}
      - name: my-secret
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
